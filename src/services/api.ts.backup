// Backup of old API service before rewrite
export interface TeamData {
  team_name: string;
  team_logo_url: string;
  game_outcome?: string;
  game_date?: string;
  opponent_name?: string;
  sport?: string;
  primaryThemeColor?: string;
  secondaryThemeColor?: string;
}

const API_ENDPOINT = 'https://34g1eh6ord.execute-api.us-west-2.amazonaws.com/New_test/sports-events';

// Mock data to use while API is not available
const MOCK_TEAMS: Record<string, TeamData> = {
  'UCSD Baseball': {
    team_name: 'UCSD Baseball',
    team_logo_url: '/images/ucsd-trident.svg',
    primaryThemeColor: '#182B49', // UCSD Blue
    secondaryThemeColor: '#FFCD00' // UCSD Gold
  },
  'SF State Baseball': {
    team_name: 'SF State Baseball',
    team_logo_url: '/images/default-logo.png',
    primaryThemeColor: '#8B0000', // Dark Red
    secondaryThemeColor: '#FFD700' // Gold
  },
  'UCLA Baseball': {
    team_name: 'UCLA Baseball',
    team_logo_url: '/images/default-logo.png',
    primaryThemeColor: '#003B7F', // UCLA Blue
    secondaryThemeColor: '#FFD100' // UCLA Gold
  },
  'Stanford Baseball': {
    team_name: 'Stanford Baseball',
    team_logo_url: '/images/default-logo.png',
    primaryThemeColor: '#8C1515', // Stanford Red
    secondaryThemeColor: '#FFFFFF' // White
  },
  'default': {
    team_name: 'UCSD Baseball',
    team_logo_url: '/images/ucsd-trident.svg',
    primaryThemeColor: '#182B49',
    secondaryThemeColor: '#FFCD00'
  }
};

export const getTeamData = async (teamName: string = 'UCSD Baseball'): Promise<TeamData> => {
  console.debug('[API] getTeamData called for team:', teamName);
  return MOCK_TEAMS[teamName] || MOCK_TEAMS.default;
};

export const fetchTeamData = async (teamName: string = 'UCSD Baseball'): Promise<TeamData[]> => {
  try {
    const response = await fetch(API_ENDPOINT);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching team data:', error);
    return [];
  }
};

export const getTeamLogo = async (teamName: string = 'UCSD Baseball'): Promise<string> => {
  try {
    const data = await fetchTeamData(teamName);
    const team = data.find(item => item.team_name === teamName);
    return team?.team_logo_url || '/images/ucsd-trident.svg';
  } catch (error) {
    console.error('Error getting team logo:', error);
    return '/images/ucsd-trident.svg';
  }
};

export const cacheTeamData = (data: TeamData): void => {
  try {
    localStorage.setItem('teamData', JSON.stringify(data));
  } catch (error) {
    console.warn('[API] Error caching team data:', error);
  }
};

export const getCachedTeamData = (): TeamData | null => {
  try {
    const cachedData = localStorage.getItem('teamData');
    if (cachedData) {
      return JSON.parse(cachedData);
    }
  } catch (error) {
    console.warn('[API] Error reading cached team data:', error);
  }
  return null;
};

export const getTeamColors = async (teamName: string = 'UCSD Baseball'): Promise<{ primaryColor: string, secondaryColor: string }> => {
  try {
    const data = await fetchTeamData(teamName);
    const team = data.find(item => item.team_name === teamName);
    
    // Return the team colors if they exist, otherwise return UCSD default colors
    return {
      primaryColor: team?.primaryThemeColor || '#182B49', // Default to UCSD Blue
      secondaryColor: team?.secondaryThemeColor || '#FFCD00' // Default to UCSD Gold
    };
  } catch (error) {
    console.error('Error getting team colors:', error);
    return {
      primaryColor: '#182B49', // Default to UCSD Blue
      secondaryColor: '#FFCD00' // Default to UCSD Gold
    };
  }
};

// This is a helper to get both the team data and colors in one call
export const getTeamDataWithColors = async (teamName: string = 'UCSD Baseball'): Promise<TeamData & { primaryColor: string, secondaryColor: string }> => {
  const data = await getTeamData(teamName);
  const colors = await getTeamColors(teamName);
  
  return {
    ...data,
    primaryColor: colors.primaryColor,
    secondaryColor: colors.secondaryColor
  };
};

// This allows getting the cached team colors from localStorage
export const getCachedTeamColors = (): { primaryColor: string, secondaryColor: string } => {
  try {
    const cachedData = getCachedTeamData();
    if (cachedData) {
      return {
        primaryColor: cachedData.primaryThemeColor || '#182B49',
        secondaryColor: cachedData.secondaryThemeColor || '#FFCD00'
      };
    }
  } catch (error) {
    console.warn('[API] Error reading cached team colors:', error);
  }
  return {
    primaryColor: '#182B49',
    secondaryColor: '#FFCD00'
  };
};
