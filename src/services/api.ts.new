import { API } from 'aws-amplify';

export interface TeamData {
  name: string;
  logo_url: string;
  team_name?: string;
  team_logo_url?: string;
}

// Mock data to use while API is not available
const MOCK_TEAMS: Record<string, TeamData> = {
  'UCSD Baseball': {
    name: 'UCSD Baseball',
    logo_url: '/images/ucsd-trident.svg',
    team_name: 'UCSD Baseball',
    team_logo_url: '/images/ucsd-trident.svg'
  },
  'default': {
    name: 'UCSD Baseball',
    logo_url: '/images/ucsd-trident.svg',
    team_name: 'UCSD Baseball',
    team_logo_url: '/images/ucsd-trident.svg'
  }
};

export const getTeamData = async (teamName: string = 'UCSD Baseball'): Promise<TeamData> => {
  console.debug('[API] getTeamData called for team:', teamName);
  return MOCK_TEAMS[teamName] || MOCK_TEAMS.default;
};

export const cacheTeamData = (data: TeamData): void => {
  try {
    localStorage.setItem('teamData', JSON.stringify(data));
  } catch (error) {
    console.warn('[API] Error caching team data:', error);
  }
};

export const getCachedTeamData = (): TeamData | null => {
  try {
    const cachedData = localStorage.getItem('teamData');
    if (cachedData) {
      return JSON.parse(cachedData);
    }
  } catch (error) {
    console.warn('[API] Error reading cached team data:', error);
  }
  return null;
};
